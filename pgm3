import cv2
import numpy as np # Read an image
image = cv2.imread('D:/skill_lab/add2.jpg') #plt.imshow(image)
 

cv2.imshow('original', image) cv2.waitKey(0)


# Trying 4 gamma values.(2.2, 1.2, 1.0, 0.5) # Apply gamma correction.
gamma_corrected1 = np.array(255*(image / 255)**2.2, dtype = np.uint8) gamma_corrected2 = np.array(255*(image / 255)**1.2, dtype = np.uint8) gamma_corrected3 = np.array(255*(image / 255)**1.0, dtype = np.uint8) gamma_corrected4 = np.array(255*(image / 255)**0.5, dtype = np.uint8)

# display images. cv2.imshow('gamma1',gamma_corrected1) cv2.imshow('gamma2',gamma_corrected2) cv2.imshow('gamma3',gamma_corrected3) cv2.imshow('gamma4',gamma_corrected4) cv2.waitKey(0)
 


 
 


 
As can be observed from the outputs as well as the graph, gamma>1, the intensity of pixels decreases i.e. the image becomes darker. On the other hand, gamma<1, the intensity increases
i.e. the image becomes lighter.

2.	Histogram equalization

Histogram equalization is a method in image processing of contrast adjustment using the image’s histogram. This method usually increases the global contrast of many images, especially when the usable data of the image is represented by close contrast values. Through this adjustment, the intensities can be better distributed on the histogram. This allows for areas of lower local contrast to gain a higher contrast. Histogram equalization accomplishes this by effectively spreading out the most frequent intensity values. The method is useful in images with backgrounds and foregrounds that are both bright or both dark.

OpenCV has a function to do this, cv2.equalizeHist(). Its input is just grayscale image and output is our histogram equalized image.

# import Opencv import cv2

# import Numpy import numpy as np

# read a image using imread
imge = cv2.imread('D:/skill_lab/add2.jpg', 0)

# creating a Histograms Equalization # of a image using cv2.equalizeHist() equ = cv2.equalizeHist(img)

# stacking images side-by-side
 

res = np.hstack((img, equ))

# show image input vs output cv2.imshow(‘Histogram_Equalized’, res) cv2.waitKey(0) cv2.destroyAllWindows()

plt.subplot(221), plt.imshow(img, 'gray') plt.subplot(222), plt.imshow(equ, 'gray') plt.subplot(223), plt.plot(histr, color = 'k') plt.subplot(224), plt.plot(histr_equ, color = 'k') plt.xlim([0, 256])

