import cv2	// computer vision module import numpy as np
from matplotlib import pyplot as plt	//read img from file into array
// to plot 2D data img0 = cv2.imread('messi.jpg',)      //loading the image # converting to gray scale
gray = cv2.cvtColor(img0, cv2.COLOR_BGR2GRAY) # remove noise
img = cv2.GaussianBlur(gray,(3,3),0)	//sigma x and sigma y

# convolute with proper kernels
sobelx = cv2.Sobel(img,cv2.CV_64F,1,0,ksize=5) # x sobely = cv2.Sobel(img,cv2.CV_64F,0,1,ksize=5) # y

plt.subplot(2,2,1),plt.imshow(img,cmap = 'gray') //mapping img to grayscale plt.title('Original'), plt.xticks([]), plt.yticks([])	//removes all ticks
 
plt.subplot(2,2,3),plt.imshow(sobelx,cmap = 'gray') plt.title('Sobel X'), plt.xticks([]), plt.yticks([]) plt.subplot(2,2,4),plt.imshow(sobely,cmap = 'gray') plt.title('Sobel Y'), plt.xticks([]), plt.yticks([]) plt.show()





import cv2	// computer vision module import numpy as np
from matplotlib import pyplot as plt	//read img from file into array
// to plot 2D data

img0 = cv2.imread('messi.jpg',)	//loading the image # converting to gray scale
gray = cv2.cvtColor(img0, cv2.COLOR_BGR2GRAY) # remove noise
img = cv2.GaussianBlur(gray,(3,3),0)	//sigma x and sigma y

# convolute with proper kernels
laplacian = cv2.Laplacian(img,cv2.CV_64F)

plt.subplot(2,2,1),plt.imshow(img,cmap = 'gray') //mapping img to grayscale plt.title('Original'), plt.xticks([]), plt.yticks([])	//removes all ticks plt.subplot(2,2,2),plt.imshow(laplacian,cmap = 'gray')
plt.title('Laplacian'), plt.xticks([]), plt.yticks([]) plt.show()
